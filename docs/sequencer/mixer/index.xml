<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Minno Suite â€“ Mixers</title><link>/docs/sequencer/mixer/</link><description>Recent content in Mixers on Minno Suite</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/docs/sequencer/mixer/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: mixerBranch</title><link>/docs/sequencer/mixer/mixerbranch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerbranch/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerBranch.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Conditionally activate specific sub sequences.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
// Set a global flag that we can test against
API.addGlobal({condition:&amp;#39;cond1&amp;#39;});
API.addSequence([
{
mixer: &amp;#39;branch&amp;#39;,
conditions: [
{compare: &amp;#39;global.condition&amp;#39;, to: &amp;#39;cond1&amp;#39;}
],
data: [
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1: will be displayed&amp;#39;
}
],
elseData: [
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2: will not be displayed&amp;#39;
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerBranch.md');
&lt;/script></description></item><item><title>Docs: mixerChoose</title><link>/docs/sequencer/mixer/mixerchoose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerchoose/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerChoose.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Choose a random subgroup of elements from the sub-sequence.
// By default chooses one. The `n` property allows to set how many to choose.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
API.addSequence([
{
mixer:&amp;#39;choose&amp;#39;, // declare the mixer
n:2, // choose two of the follwoing elements
data:[ // a list of tasks to bhoose from
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 3&amp;#39;
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerChoose.md');
&lt;/script></description></item><item><title>Docs: mixerMultiBranch</title><link>/docs/sequencer/mixer/mixermultibranch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixermultibranch/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerMultiBranch.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Conditionally activate specific sub sequences.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
// Set a global flag that we can test against
API.addGlobal({condition:&amp;#39;cond1&amp;#39;});
API.addSequence([
{
mixer: &amp;#39;multiBranch&amp;#39;,
branches: [
{
conditions: [
{compare: &amp;#39;global.condition&amp;#39;, to: &amp;#39;cond0&amp;#39;}
],
data: [
{type:&amp;#39;message&amp;#39;,keys: &amp;#39; &amp;#39;,template: &amp;#39;Task 0: will not be displayed&amp;#39;}
]
},
{
conditions: [
{compare: &amp;#39;global.condition&amp;#39;, to: &amp;#39;cond1&amp;#39;}
],
data: [
{type:&amp;#39;message&amp;#39;,keys: &amp;#39; &amp;#39;,template: &amp;#39;Task 1: will be displayed&amp;#39;},
{type:&amp;#39;message&amp;#39;,keys: &amp;#39; &amp;#39;,template: &amp;#39;Task 2: will be displayed&amp;#39;}
]
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerMultiBranch.md');
&lt;/script></description></item><item><title>Docs: mixerRandom</title><link>/docs/sequencer/mixer/mixerrandom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerrandom/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerRandom.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Randomizes the order of elements in `data`.
//
// Please note that the randomizer pre-mixes all the content in data,
// so that any branching mixers will be branched according to the environment as it is when the random mixer is reached.
// If you want to delay the branching until it is reached, simply wrap it within a `wrapper` mixer.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
API.addSequence([
{
mixer:&amp;#39;random&amp;#39;, // declare the mixer
data:[ // a list of tasks to randomize
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 3&amp;#39;
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerRandom.md');
&lt;/script></description></item><item><title>Docs: mixerRepeat</title><link>/docs/sequencer/mixer/mixerrepeat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerrepeat/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerRepeat.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Repeats the element in `data` `times` times.
//
// Please note that the randomizer pre-mixes all the content in data,
// so that any branching mixers will be branched according to the environment as it is when the mixer is reached.
// If you want to delay the branching until it is reached, simply wrap it within a `wrapper` mixer.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
API.addSequence([
{
mixer:&amp;#39;repeat&amp;#39;, // declare the mixer
times: 3, // how many times to repeat these tasks
data:[ // a list of tasks to repeat
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2&amp;#39;
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerRepeat.md');
&lt;/script></description></item><item><title>Docs: mixerWeightedRandom</title><link>/docs/sequencer/mixer/mixerweightedrandom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerweightedrandom/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerWeightedRandom.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// Randomizes the order of elements in `data`.
//
// Please note that the randomizer pre-mixes all the content in data,
// so that any branching mixers will be branched according to the environment as it is when the random mixer is reached.
// If you want to delay the branching until it is reached, simply wrap it within a `wrapper` mixer.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
API.addSequence([
{
mixer:&amp;#39;weightedRandom&amp;#39;, // declare the mixer
weights: [0.2, 0.8], // weights by which to randomize
data:[ // a list of tasks to randomize
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1 (20% of the time)&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2 (80% of the time)&amp;#39;
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerWeightedRandom.md');
&lt;/script></description></item><item><title>Docs: mixerWrapper</title><link>/docs/sequencer/mixer/mixerwrapper/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/sequencer/mixer/mixerwrapper/</guid><description>
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.css" integrity="sha256-ylWkFzi+pmuVQm80SJjUJvNjzXmRc6+naSkH2xWL5+8=" crossorigin="anonymous">
&lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/theme/monokai.css" integrity="sha256-JGPcb9kgGaDHyiqqAdAxFrKA+nxq4BvyHffBB9m2g+g=" crossorigin="anonymous">
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/lib/codemirror.min.js">&lt;/script>
&lt;script src="https://cdn.jsdelivr.net/npm/codemirror@5.59.2/mode/javascript/javascript.js" integrity="sha256-XxB90cNdnOuUFQjAE56w4OBTdMu5SHChSz02/Ki3oAQ=" crossorigin="anonymous">&lt;/script>
&lt;div class="pg-section" id="pg-mixerWrapper.md">
&lt;p>
&lt;a class="pg-play btn btn-warning">&lt;i class="fas fa-play">&lt;/i> Run &lt;/a>
&lt;a class="pg-download btn btn-outline-warning">&lt;i class="fas fa-download">&lt;/i> Download &lt;/a>
&lt;/p>
&lt;textarea class="code-mirror" rows="40">
// By default the mixer mixes depth first.
// This means that all the internal mixers will be mixed before the external mixer will be mixed before an external mixer kicks in.
// The wrapper mixer serves as a sort of parentheses allowing you to control the order of mixing.
// In this example we show how to cause a random mixer to treat task 3 and 4 as a single chunk, and therefore keep them together despite randomization.
define([&amp;#39;managerAPI&amp;#39;], function(Manager){
var API = new Manager();
API.addSequence([
/* The random mixer */
{
mixer: &amp;#39;random&amp;#39;,
data: [
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 1&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 2&amp;#39;
},
/* The Wrapper mixer. Tasks 3 and 4 will be treated as a single object when randomizing */
{
mixer: &amp;#39;wrapper&amp;#39;,
data: [
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 3 (always comes before 4)&amp;#39;
},
{
type:&amp;#39;message&amp;#39;,
keys: &amp;#39; &amp;#39;,
template: &amp;#39;Task 4 (always comes after 3)&amp;#39;
}
]
}
]
}
]);
return API.script;
});
&lt;/textarea>
&lt;/div>
&lt;script>
(function(filename){
var win, section;
var section = document.getElementById('pg-' + filename);
var el = section.querySelector('.code-mirror');
var cm = CodeMirror.fromTextArea(el,{ theme:'monokai' });
cm.setSize(null, 500);
section.querySelector('.pg-download').addEventListener('click', function(){
var blob = new Blob([cm.getValue()], { type: 'text/javascript' });
if (window.navigator.msSaveOrOpenBlob) window.navigator.msSaveBlob(blob, filename);
else {
var elem = window.document.createElement('a');
elem.href = window.URL.createObjectURL(blob);
elem.download = filename;
document.body.appendChild(elem);
elem.click();
document.body.removeChild(elem);
}
});
section.querySelector('.pg-play').addEventListener('click', function(){
var runminnoUrl = '\/runminno.html';
if (win) win.close();
win = window.open(runminnoUrl, 'Playground');
win.onload = function(){
win.addEventListener('unload', function() {
window.focus();
});
win.activate(cm.getValue());
};
});
})('mixerWrapper.md');
&lt;/script></description></item></channel></rss>